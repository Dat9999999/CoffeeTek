// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int    @id @default(autoincrement())
  phone_number String @unique
  email        String @unique
  // password hash for security
  hash         String

  first_name    String         @default("empty")
  last_name     String         @default("empty")
  is_locked     Boolean        @default(false)
  roles         Role[]         @relation("UserRoles")
  detail        UserDetail?
  customerPoint CustomerPoint?

  @@map("users")
}

model UserDetail {
  id         Int      @id @default(autoincrement())
  birthday   DateTime
  sex        String
  avatar_url String
  address    String

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  @@map("user_details")
}

model Role {
  id        Int    @id @default(autoincrement())
  role_name String @unique
  users     User[] @relation("UserRoles")

  @@map("roles")
}

model OptionGroup {
  id     Int           @id @default(autoincrement())
  name   String
  values OptionValue[] // 1 group có nhiều value

  @@map("option_groups")
}

model OptionValue {
  id              Int         @id @default(autoincrement())
  name            String
  sort_index      Int
  option_group    OptionGroup @relation(fields: [option_group_id], references: [id])
  option_group_id Int

  @@map("option_values")
}

model Size {
  id         Int    @id @default(autoincrement())
  name       String @unique
  sort_index Int

  @@map("sizes")
}

model LoyaltyLevel {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  discount_rate Float           @default(0) // percentage discount
  min_point     Int             @default(0)
  max_point     Int             @default(0)
  description   String?
  CustomerPoint CustomerPoint[]

  @@map("loyalty_levels")
}

model CustomerPoint {
  id             Int           @id @default(autoincrement())
  total_point    Int           @default(0)
  user           User          @relation(fields: [userId], references: [id])
  userId         Int           @unique
  loyaltyLevel   LoyaltyLevel? @relation(fields: [loyaltyLevelId], references: [id])
  loyaltyLevelId Int?

  @@map("customer_points")
}
